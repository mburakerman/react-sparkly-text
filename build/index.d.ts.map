{"mappings":"AAKA,mBAAmB,MAAM,YAAY,CAAC;IAAE,QAAQ,EAAE,MAAM,SAAS,CAAA;CAAE,CAAC,CAAC;AAErE,aAAa;IACX,QAAQ,EAAE,MAAM,GAAG,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,CAAC;IAC7D,IAAI,CAAC,EAAE,MAAM,CAAC;CACf,CAAC;AA0CF,OAAO,MAAM,kCAAkD,KAAK,4CAgBnE,CAAC","sources":["src/components/src/components/SparklyText.tsx","src/components/SparklyText.tsx"],"sourcesContent":[null,"import { useEffect, useState } from \"react\";\nimport \"./sparkly-text.css\";\n\nconst DEFAULT_SIZE = 30;\n\ntype TextElement = React.ReactElement<{ children: React.ReactNode }>;\n\ntype Props = {\n  children: string | TextElement | Array<string | TextElement>;\n  size?: number; // size in pixels\n};\n\ntype SparkleSVGProps = {\n  timeout?: number; // in ms\n} & Pick<Props, \"size\">;\n\nconst SparkleSVG = ({ size, timeout = 1000 }: SparkleSVGProps) => {\n  const [showSparkle, setShowSparkle] = useState(false);\n  const [color, setColor] = useState(\"#8BE9FD\");\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setShowSparkle(!showSparkle);\n      setColor(`#${Math.floor(Math.random() * 16777215).toString(16)}`);\n    }, timeout);\n\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!showSparkle) {\n    return null;\n  }\n  return (\n    <svg\n      className=\"react-sparkly-text__sparkle-svg-x\"\n      viewBox=\"0 0 1200 1200\"\n      fill={color}\n      width={`${size}px`}\n      height={`${size}px`}\n      style={{\n        // generate random between -20 / 20\n        top: `calc(${Math.floor(Math.random() * 41) - 20}px)`,\n        // generate random between -20 / 120\n        left: `calc(${Math.floor(Math.random() * 121) - 20}%)`,\n      }}\n    >\n      <path d=\"m611.04 866.16c17.418-61.09 50.25-116.68 95.352-161.42 45.098-44.742 100.94-77.133 162.17-94.062l38.641-10.68-38.641-10.68c-61.227-16.93-117.07-49.32-162.17-94.062-45.102-44.738-77.934-100.33-95.352-161.42l-11.039-38.641-11.039 38.641c-17.418 61.09-50.25 116.68-95.352 161.42-45.098 44.742-100.94 77.133-162.17 94.062l-38.641 10.68 38.641 10.68c61.227 16.93 117.07 49.32 162.17 94.062 45.102 44.738 77.934 100.33 95.352 161.42l11.039 38.641z\" />\n    </svg>\n  );\n};\n\nexport const SparklyText = ({ children, size = DEFAULT_SIZE }: Props) => {\n  const generateRandomTimeout = () =>\n    Math.floor(Math.random() * (3200 - 2200) + 2200);\n\n  return (\n    <span\n      className=\"react-sparkly-text__container-x\"\n      data-testid={`sparkly-text-${children.toString()}`}\n    >\n      {children}\n      <SparkleSVG size={size} />\n      <SparkleSVG size={size} timeout={generateRandomTimeout()} />\n      <SparkleSVG size={size} timeout={generateRandomTimeout()} />\n      <SparkleSVG size={size} timeout={generateRandomTimeout()} />\n    </span>\n  );\n};\n"],"names":[],"version":3,"file":"index.d.ts.map"}